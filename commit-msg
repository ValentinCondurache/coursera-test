#!/bin/bash

# Setup:
# 1. Add this file in {repo path}/.git/hooks/commmit-msg
# 2. If commmit-msg.sample file is present, should be replaced by this file (without .sample extension)
# 3. Done! 

# This hook for commit messages is doing two things:

# 1. Verifies if any of the commit messages on current branch contains a 
# ticket number in the format [#123456789]

# 2. Ask the user if he wants to skip ci tests for the current commit 
# Pressing enter it means a "n" (no) answer. 
# If it types "y" it will add "[skip ci]" tag at the end of commit message


# Part 1

messageFile=$1   # Commit message file is stored in .git/COMMIT_EDITMSG
commitMessage=`cat $messageFile`

branch=$(git symbolic-ref --short HEAD)
allCommitsOnCurrentBranch=`cat .git/logs/refs/heads/$branch`

pattern1="\[#[[:digit:]]+\]"
pattern2="commit:.*\[#[[:digit:]]+\]"

if ! [[ "$commitMessage" =~ $pattern1 ]] && ! [[ "$allCommitsOnCurrentBranch" =~ $pattern2 ]]; then
      tput setaf 1;   # set red text color
      echo "Please enter a ticket number in commit message e.g. [#123456789]"
      while exec < /dev/tty; do
        exit 1;
      done
fi

# Part 2

if ! [[ $commitMessage =~ (skip ci|ci skip) ]]; then   # Checks if is already mentioned a skip ci|ci skip flag

  # "exec < /dev/tty" allows us to read user input below, assigns stdin to keyboard
  while exec < /dev/tty; do
    tput setaf 2;   # set green text color
    read -p  "Do you want to skip ci tests for this commit? (y/n)" yn
    if [ "$yn" = "" ]; then
      yn='N'
    fi
    case $yn in
        [Yy] )  echo "Answer: Yes"
                tr -d '\n' < $messageFile > $messageFile
                echo "$commitMessage [skip ci]" >> $messageFile
                exit 0;;
        [Nn] )  echo "Answer: No"
                exit 0;;
        * ) echo "Please answer y or n for yes or no.";;
    esac
  done
  
fi
